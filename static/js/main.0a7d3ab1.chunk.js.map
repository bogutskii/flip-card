{"version":3,"sources":["App.js","index.js","reverse.png"],"names":["App","useState","question","answer","showAnswer","allCards","setAllCards","inpCard","setInpCard","flippedCard","e","index","map","el","i","className","autoFocus","type","value","onChange","target","inpQuestion","placeholder","inpAnswer","onClick","disabled","sort","Math","random","card","isFlipped","flipDirection","arr","splice","deleteCard","src","reverse_icon","onMouseLeave","rootElement","document","getElementById","ReactDOM","render","StrictMode","module","exports"],"mappings":"0RAIe,SAASA,IAAO,IAAD,EACIC,mBAAS,CACvC,CACEC,SAAU,WACVC,OAAQ,SACRC,YAAY,KALY,mBACrBC,EADqB,KACXC,EADW,OAUEL,mBAAS,CACrCC,SAAU,GACVC,OAAQ,GACRC,YAAY,IAbc,mBAUrBG,EAVqB,KAUZC,EAVY,KAkCtBC,EAAc,SAACC,EAAGC,GAExBL,EACID,EAASO,KAAI,SAACC,EAAIC,GAAL,OACXA,IAAMH,EAAN,2BAAmBE,GAAnB,IAAuBT,YAAaS,EAAGT,aAAeS,OAW5D,OACE,yBAAKE,UAAU,OACb,2BACAC,WAAS,EACTC,KAAK,OACHC,MAAOX,EAAQL,SACfiB,SAAU,SAACT,GAAD,OAZE,SAACA,GACnBF,EAAW,2BAAKD,GAAN,IAAeL,SAAUQ,EAAEU,OAAOF,SAWrBG,CAAYX,IAC7BY,YAAY,aAEd,2BACEJ,MAAOX,EAAQJ,OACfgB,SAAU,SAACT,GAAD,OAdE,SAACA,GACjBF,EAAW,2BAAKD,GAAN,IAAeJ,OAAQO,EAAEU,OAAOF,SAarBK,CAAUb,IAC7BY,YAAY,WACZ,4BAAQE,QA9CI,WAClBlB,EAAY,GAAD,mBAAKD,GAAL,CAAcE,KACrBC,EAAW,CACTN,SAAU,GACVC,OAAQ,GACRC,YAAY,KAyCcqB,SAAUlB,EAAQL,UAAYK,EAAQJ,QAAhE,YACA,4BAAQqB,QAvCI,WACdlB,EAAY,YAAID,GAAUqB,MAAK,iBAAM,GAAKC,KAAKC,eAsC7C,WACA,yBAAKb,UAAU,aACdV,EAASO,KAAI,SAACiB,EAAMlB,GAAP,OACZ,oCACE,kBAAC,IAAD,CAAemB,UAAWD,EAAKzB,WAAY2B,cAAc,YAGzD,yBAAKhB,UAAU,cACZc,EAAK3B,SACJ,4BAAQa,UAAU,YAAYS,QAAS,SAACd,GAAD,OA7ChC,SAACC,GACtB,IAAIqB,EAAG,YAAO3B,GACV2B,EAAIC,OAAOtB,EAAO,GAClBL,EAAY0B,GA0C4CE,CAAWxB,KAAzD,QAGA,4BAAQK,UAAU,YAAYS,QAAS,SAACd,GAAD,OAAOD,EAAYC,EAAGC,KAC3D,yBAAKI,UAAU,OAAOoB,IAAKC,MAD7B,YAOJ,yBAAKrB,UAAU,aAAasB,aAAc,SAAC3B,GAAD,OAAOD,EAAYC,EAAGC,KAC7DkB,EAAK1B,eClFlB,IAAMmC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC3C,EAAD,OAEFsC,I,kBCVFM,EAAOC,QAAU,IAA0B,sC","file":"static/js/main.0a7d3ab1.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./styles.css\";\nimport ReactCardFlip from \"react-card-flip\";\nimport reverse_icon from './reverse.png'\nexport default function App() {\n  const [allCards, setAllCards] = useState([\n    {\n      question: \"Question\",\n      answer: \"answer\",\n      showAnswer: false\n    }\n  ]); \n\n  \n  const [inpCard, setInpCard] = useState({\n    question: \"\",\n    answer: \"\",\n    showAnswer: false\n  })\n\n  const addCard = () => {\nsetAllCards([...allCards,inpCard])\n    setInpCard({\n      question: \"\",\n      answer: \"\",\n      showAnswer: false\n  })\n  };\n  const shuffle = () => {\n    setAllCards([...allCards].sort(() => .5 - Math.random() ))\n  };\n  const deleteCard = (index) =>{\nlet arr = [...allCards]\n    arr.splice(index, 1)\n    setAllCards(arr)\n  }\n  \n  \n  const flippedCard = (e, index) => {\n   \n  setAllCards(\n      allCards.map((el, i) =>\n        i === index ? { ...el, showAnswer: !el.showAnswer } : el\n      )\n    );\n\n  };\nconst inpQuestion = (e)=> {\n  setInpCard({ ...inpCard, question: e.target.value})\n}\n  const inpAnswer = (e) => {\n    setInpCard({ ...inpCard, answer: e.target.value })\n  }\n  return (\n    <div className=\"App\">\n      <input\n      autoFocus\n      type=\"text\"\n        value={inpCard.question}\n        onChange={(e) => inpQuestion(e)}\n        placeholder=\"question\"\n      />\n      <input\n        value={inpCard.answer}\n        onChange={(e) => inpAnswer(e)}\n      placeholder=\"answer\" />\n      <button onClick={addCard} disabled={inpCard.question && inpCard.answer}>add card</button>\n      <button onClick={shuffle}>Shuffle</button>\n      <div className='container'>\n      {allCards.map((card, index) => (\n        <>\n          <ReactCardFlip isFlipped={card.showAnswer} flipDirection=\"vertical\">\n          \n\n          <div className=\"cardFrameQ\" >\n            {card.question}\n              <button className=\"btn-close\" onClick={(e) => deleteCard(e, index)}>&times;</button>\n             \n             \n              <button className=\"btn-green\" onClick={(e) => flippedCard(e, index)}>\n                <img className=\"icon\" src={reverse_icon}/> answer \n                </button>\n\n\n          </div>\n\n          <div className=\"cardFrameA\" onMouseLeave={(e) => flippedCard(e, index)}>\n            {card.answer}\n            \n          </div>\n\n\n\n        </ReactCardFlip>\n</>\n      ))\n      }\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n)\n","module.exports = __webpack_public_path__ + \"static/media/reverse.b6dbfefd.png\";"],"sourceRoot":""}